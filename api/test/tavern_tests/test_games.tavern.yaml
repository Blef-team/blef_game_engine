---
# This test requires BASE_URL environment variable
test_name: Test /games* endpoints

# Allow for extra keys in the response
strict:
  - headers:on
  - json:off

stages:
  - name: Validate /version
    request:
      url: "{tavern.env_vars.BASE_URL}/version"
      method: GET
    response:
      status_code: 200
      verify_response_with:
        function: testing_utils:test_version

  - name: Validate /games
    request:
      url: "{tavern.env_vars.BASE_URL}/games"
      method: GET
    response:
      status_code: 200
      verify_response_with:
        function: testing_utils:test_games

  - name: Create a game
    request:
      url: "{tavern.env_vars.BASE_URL}/games/create"
      method: GET
    response:
      status_code: 200
      save:
        json:
          game_uuid: game_uuid
      verify_response_with:
        function: testing_utils:test_create

  - name: Get game state
    request:
      url: "{tavern.env_vars.BASE_URL}/games/{game_uuid}"
      method: GET
    response:
      status_code: 200
      verify_response_with:
        function: testing_utils:test_game_state

  - name: Try joining game with a nickname that is too long
    request:
      url: "{tavern.env_vars.BASE_URL}/games/{game_uuid}/join?nickname=themostannoyingnicknameintheworld"
      method: GET
    response:
      status_code: 400
      verify_response_with:
        function: testing_utils:test_join_nickname_too_long

  - name: Join game
    request:
      url: "{tavern.env_vars.BASE_URL}/games/{game_uuid}/join?nickname=test_player"
      method: GET
    response:
      status_code: 200
      save:
        json:
          admin_player_uuid: player_uuid
      verify_response_with:
        function: testing_utils:test_join

  - &get_game_state_with_admin_player_uuid_anchor
    name: Get game state with admin_player_uuid
    request:
      url: "{tavern.env_vars.BASE_URL}/games/{game_uuid}?player_uuid{admin_player_uuid}"
      method: GET
    response:
      status_code: 200
      verify_response_with:
        function: testing_utils:test_game_state

  - name: Join game as second player
    request:
      url: "{tavern.env_vars.BASE_URL}/games/{game_uuid}/join?nickname=test_player_2"
      method: GET
    response:
      status_code: 200
      save:
        json:
          player_2_uuid: player_uuid
      verify_response_with:
        function: testing_utils:test_join

  - *get_game_state_with_admin_player_uuid_anchor

  - name: Get game state with player_2_uuid
    request:
      url: "{tavern.env_vars.BASE_URL}/games/{game_uuid}?player_uuid{player_2_uuid}"
      method: GET
    response:
      status_code: 200
      verify_response_with:
        function: testing_utils:test_game_state

  - name: Start game
    request:
      url: "{tavern.env_vars.BASE_URL}/games/{game_uuid}/start?admin_uuid={admin_player_uuid}"
      method: GET
    response:
      status_code: 202
      verify_response_with:
        function: testing_utils:test_start

  - &get_running_game_state_with_admin_player_uuid_anchor
    name: Get running game state with admin_player_uuid
    request:
      url: "{tavern.env_vars.BASE_URL}/games/{game_uuid}?player_uuid{admin_player_uuid}"
      method: GET
    response:
      status_code: 200
      verify_response_with:
        function: testing_utils:test_running_game_state_with_player_uuid

  - &get_running_game_state_with_player_2_uuid_anchor
    name: Get running game state with admin_player_uuid
    request:
      url: "{tavern.env_vars.BASE_URL}/games/{game_uuid}?player_uuid{player_2_uuid}"
      method: GET
    response:
      status_code: 200
      verify_response_with:
        function: testing_utils:test_running_game_state_with_player_uuid

  - name: Play an admin player move
    request:
      url: "{tavern.env_vars.BASE_URL}/games/{game_uuid}/play?player_uuid={admin_player_uuid}&action_id=10"
      method: GET
    response:
      status_code:
        - 200
        - 400
      verify_response_with:
        function: testing_utils:test_play

  - name: Play a player 2 move
    request:
      url: "{tavern.env_vars.BASE_URL}/games/{game_uuid}/play?player_uuid={player_2_uuid}&action_id=20"
      method: GET
    response:
      status_code:
        - 200
        - 400
      verify_response_with:
        function: testing_utils:test_play

  - name: Get game state with admin_player_uuid after play
    request:
      url: "{tavern.env_vars.BASE_URL}/games/{game_uuid}?player_uuid{admin_player_uuid}"
      method: GET
    response:
      status_code: 200
      verify_response_with:
        function: testing_utils:test_game_state_with_player_uuid_after_play

  - name: Get game state with player_2_uuid after play
    request:
      url: "{tavern.env_vars.BASE_URL}/games/{game_uuid}?player_uuid{player_2_uuid}"
      method: GET
    response:
      status_code: 200
      verify_response_with:
        function: testing_utils:test_game_state_with_player_uuid_after_play
